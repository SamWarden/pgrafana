version: "3.9"

services:
  grafana:
    image: grafana/grafana:9.1.5
    container_name: pgrafana.grafana
    hostname: pgrafana.grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - pgrafana.network
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - VIRTUAL_HOST=pgrafana.grafana
      - NETWORK_ACCESS=internal
      - VIRTUAL_PORT=3000
    labels:
      org.label-schema.group: "pgrafana"

  loki:
    image: grafana/loki:2.2.1
    container_name: pgrafana.loki
    hostname: pgrafana.loki
    expose:
      - "3100"
    volumes:
      - ./loki/config.yaml:/etc/loki/config.yaml
      - loki-data:/tmp/loki/
    command: -config.file=/etc/loki/config.yaml
    restart: unless-stopped
    networks:
      - pgrafana.network
    labels:
      org.label-schema.group: "pgrafana"

  vector:
    image: timberio/vector:0.24.1-alpine
    container_name: pgrafana.vector
    hostname: pgrafana.vector
    restart: unless-stopped
    networks:
      - pgrafana.network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./vector/vector.toml:/etc/vector/vector.toml:ro
    expose:
      - "8383"

  emitter:
    image: pgrafana-emitter
    hostname: pgrafana.emitter
    build:
      context: ./emitter
    container_name: pgrafana.emitter
    restart: unless-stopped
    labels:
      org.label-schema.group: "pgrafana"

    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

networks:
  pgrafana.network:

volumes:
  grafana-data:
  loki-data:
